//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23305415
// Driver 384.111
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan
.const .align 8 .b8 __internal_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.entry DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3
)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<73>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<138>;
	.reg .f64 	%fd<508>;
	.reg .b64 	%rd<142>;


	mov.u64 	%rd141, __local_depot0;
	cvta.local.u64 	%SP, %rd141;
	ld.param.u64 	%rd48, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1];
	ld.param.u64 	%rd49, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2];
	ld.param.u64 	%rd50, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3];
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %ntid.x;
	mov.b32	%r41, %envreg3;
	mad.lo.s32 	%r42, %r39, %r40, %r41;
	mov.u32 	%r43, %tid.x;
	add.s32 	%r1, %r42, %r43;
	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd51, %r1, 8;
	add.s64 	%rd2, %rd50, %rd51;
	mov.f64 	%fd485, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p1, %r1, 4;
	mov.f64 	%fd484, %fd485;
	@%p1 bra 	BB0_2;

	ld.global.f64 	%fd484, [%rd2];

BB0_2:
	@%p1 bra 	BB0_4;

	ld.global.f64 	%fd485, [%rd2];

BB0_4:
	abs.f64 	%fd82, %fd485;
	setp.gtu.f64	%p3, %fd82, 0d7FF0000000000000;
	cvt.u32.u64	%r2, %rd1;
	setp.gt.s32	%p4, %r2, 4;
	or.pred  	%p5, %p3, %p4;
	selp.f64	%fd5, 0d0000000000000000, %fd484, %p5;
	abs.f64 	%fd6, %fd5;
	setp.leu.f64	%p6, %fd6, 0d3FF0000000000000;
	mov.f64 	%fd486, %fd6;
	@%p6 bra 	BB0_6;

	// inline asm
	rcp.approx.ftz.f64 %fd83,%fd6;
	// inline asm
	neg.f64 	%fd85, %fd6;
	mov.f64 	%fd86, 0d3FF0000000000000;
	fma.rn.f64 	%fd87, %fd85, %fd83, %fd86;
	fma.rn.f64 	%fd88, %fd87, %fd87, %fd87;
	fma.rn.f64 	%fd89, %fd88, %fd83, %fd83;
	setp.eq.f64	%p7, %fd6, 0d7FF0000000000000;
	selp.f64	%fd486, 0d0000000000000000, %fd89, %p7;

BB0_6:
	mul.f64 	%fd91, %fd486, %fd486;
	mov.f64 	%fd92, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd93, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd94, %fd93, %fd91, %fd92;
	mov.f64 	%fd95, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd96, %fd94, %fd91, %fd95;
	mov.f64 	%fd97, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd98, %fd96, %fd91, %fd97;
	mov.f64 	%fd99, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd100, %fd98, %fd91, %fd99;
	mov.f64 	%fd101, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd102, %fd100, %fd91, %fd101;
	mov.f64 	%fd103, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd104, %fd102, %fd91, %fd103;
	mov.f64 	%fd105, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd106, %fd104, %fd91, %fd105;
	mov.f64 	%fd107, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd108, %fd106, %fd91, %fd107;
	mov.f64 	%fd109, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd110, %fd108, %fd91, %fd109;
	mov.f64 	%fd111, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd112, %fd110, %fd91, %fd111;
	mov.f64 	%fd113, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd114, %fd112, %fd91, %fd113;
	mov.f64 	%fd115, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd116, %fd114, %fd91, %fd115;
	mov.f64 	%fd117, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd118, %fd116, %fd91, %fd117;
	mov.f64 	%fd119, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd120, %fd118, %fd91, %fd119;
	mov.f64 	%fd121, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd122, %fd120, %fd91, %fd121;
	mov.f64 	%fd123, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd124, %fd122, %fd91, %fd123;
	mov.f64 	%fd125, 0d3FC99999999840D2;
	fma.rn.f64 	%fd126, %fd124, %fd91, %fd125;
	mov.f64 	%fd127, 0dBFD555555555544C;
	fma.rn.f64 	%fd128, %fd126, %fd91, %fd127;
	mul.f64 	%fd129, %fd91, %fd128;
	fma.rn.f64 	%fd130, %fd129, %fd486, %fd486;
	mov.f64 	%fd131, 0d3FF921FB54442D18;
	sub.f64 	%fd132, %fd131, %fd130;
	setp.gt.f64	%p8, %fd6, 0d3FF0000000000000;
	selp.f64	%fd133, %fd132, %fd130, %p8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd5;
	}
	and.b32  	%r47, %r46, -2147483648;
	or.b32  	%r48, %r45, %r47;
	mov.b64 	%fd9, {%r44, %r48};
	shl.b64 	%rd52, %rd1, 3;
	add.s64 	%rd3, %rd49, %rd52;
	mov.f64 	%fd488, 0d7FFFFFFFE0000000;
	mov.f64 	%fd487, %fd488;
	@%p1 bra 	BB0_8;

	ld.global.f64 	%fd487, [%rd3];

BB0_8:
	@%p1 bra 	BB0_10;

	ld.global.f64 	%fd488, [%rd3];

BB0_10:
	abs.f64 	%fd135, %fd488;
	setp.gtu.f64	%p11, %fd135, 0d7FF0000000000000;
	or.pred  	%p13, %p11, %p4;
	selp.f64	%fd14, 0d0000000000000000, %fd487, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd14;
	}
	and.b32  	%r50, %r49, 2147483647;
	setp.ne.s32	%p14, %r50, 2146435072;
	@%p14 bra 	BB0_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r51, %temp}, %fd14;
	}
	setp.eq.s32	%p15, %r51, 0;
	mov.f64 	%fd491, 0dFFF8000000000000;
	@%p15 bra 	BB0_31;

BB0_12:
	abs.f64 	%fd137, %fd14;
	setp.gt.f64	%p16, %fd137, 0d41E0000000000000;
	@%p16 bra 	BB0_14;
	bra.uni 	BB0_13;

BB0_14:
	add.u64 	%rd54, %SP, 0;
	cvta.to.local.u64 	%rd7, %rd54;
	mov.b64 	 %rd4, %fd14;
	and.b64  	%rd5, %rd4, -9223372036854775808;
	shr.u64 	%rd6, %rd4, 52;
	bfe.u64 	%rd55, %rd4, 52, 11;
	add.s64 	%rd56, %rd55, 4294966272;
	cvt.u32.u64	%r53, %rd56;
	shr.u32 	%r54, %r53, 6;
	mov.u32 	%r55, 15;
	sub.s32 	%r56, %r55, %r54;
	mov.u32 	%r57, 19;
	sub.s32 	%r58, %r57, %r54;
	mov.u32 	%r59, 18;
	min.s32 	%r4, %r59, %r58;
	mov.u64 	%rd130, 0;
	setp.ge.s32	%p17, %r56, %r4;
	mov.u64 	%rd129, %rd7;
	@%p17 bra 	BB0_17;

	shl.b64 	%rd58, %rd4, 11;
	or.b64  	%rd8, %rd58, -9223372036854775808;
	cvta.to.local.u64 	%rd9, %rd54;
	cvt.u32.u64	%r60, %rd6;
	and.b32  	%r61, %r60, 2047;
	add.s32 	%r62, %r61, -1024;
	shr.u32 	%r63, %r62, 6;
	neg.s32 	%r64, %r63;
	mul.wide.s32 	%rd61, %r64, 8;
	mov.u64 	%rd62, __internal_i2opi_d;
	add.s64 	%rd63, %rd61, %rd62;
	add.s64 	%rd126, %rd63, 120;
	and.b64  	%rd64, %rd6, 2047;
	add.s64 	%rd65, %rd64, 4294966272;
	cvt.u32.u64	%r65, %rd65;
	shr.u32 	%r66, %r65, 6;
	sub.s32 	%r5, %r55, %r66;
	mov.u64 	%rd130, 0;
	mov.u64 	%rd129, %rd9;
	mov.u32 	%r128, %r5;

BB0_16:
	.pragma "nounroll";
	ld.const.u64 	%rd66, [%rd126];
	mul.lo.s64 	%rd67, %rd66, %rd8;
	mul.hi.u64 	%rd68, %rd66, %rd8;
	add.s64 	%rd69, %rd130, %rd67;
	setp.lt.u64	%p18, %rd69, %rd130;
	selp.u64	%rd70, 1, 0, %p18;
	add.s64 	%rd130, %rd70, %rd68;
	st.local.u64 	[%rd129], %rd69;
	add.s32 	%r128, %r128, 1;
	sub.s32 	%r72, %r128, %r5;
	mul.wide.s32 	%rd73, %r72, 8;
	add.s64 	%rd129, %rd9, %rd73;
	add.s64 	%rd126, %rd126, 8;
	setp.lt.s32	%p19, %r128, %r4;
	@%p19 bra 	BB0_16;

BB0_17:
	st.local.u64 	[%rd129], %rd130;
	add.s64 	%rd74, %rd6, 4294966272;
	cvt.u32.u64	%r73, %rd74;
	and.b32  	%r74, %r73, 63;
	ld.local.u64 	%rd131, [%rd7+24];
	ld.local.u64 	%rd132, [%rd7+16];
	setp.eq.s32	%p20, %r74, 0;
	@%p20 bra 	BB0_19;

	cvt.u32.u64	%r75, %rd6;
	and.b32  	%r76, %r75, 63;
	shl.b64 	%rd76, %rd131, %r76;
	neg.s64 	%rd77, %rd6;
	cvt.u32.u64	%r77, %rd77;
	and.b32  	%r78, %r77, 63;
	shr.u64 	%rd78, %rd132, %r78;
	or.b64  	%rd131, %rd78, %rd76;
	shl.b64 	%rd79, %rd132, %r76;
	ld.local.u64 	%rd80, [%rd7+8];
	shr.u64 	%rd81, %rd80, %r78;
	or.b64  	%rd132, %rd81, %rd79;

BB0_19:
	shr.u64 	%rd82, %rd131, 62;
	cvt.u32.u64	%r79, %rd82;
	shr.u64 	%rd83, %rd132, 62;
	shl.b64 	%rd84, %rd131, 2;
	or.b64  	%rd138, %rd83, %rd84;
	shl.b64 	%rd28, %rd132, 2;
	setp.ne.s64	%p21, %rd28, 0;
	selp.u64	%rd85, 1, 0, %p21;
	or.b64  	%rd86, %rd85, %rd138;
	setp.gt.u64	%p22, %rd86, -9223372036854775808;
	selp.u32	%r80, 1, 0, %p22;
	add.s32 	%r8, %r80, %r79;
	setp.lt.u64	%p23, %rd86, -9223372036854775807;
	@%p23 bra 	BB0_20;

	not.b64 	%rd87, %rd138;
	neg.s64 	%rd135, %rd28;
	setp.eq.s64	%p24, %rd28, 0;
	selp.u64	%rd88, 1, 0, %p24;
	add.s64 	%rd138, %rd88, %rd87;
	xor.b64  	%rd134, %rd5, -9223372036854775808;
	bra.uni 	BB0_22;

BB0_13:
	mov.f64 	%fd151, 0d3FE45F306DC9C883;
	mul.rn.f64 	%fd138, %fd14, %fd151;
	// inline asm
	cvt.rni.s32.f64 	%r132, %fd138;
	// inline asm
	cvt.rn.f64.s32	%fd152, %r132;
	neg.f64 	%fd148, %fd152;
	// inline asm
	fma.rn.f64 	%fd139, %fd148, %fd131, %fd14;
	// inline asm
	mov.f64 	%fd145, 0d3C91A62633145C00;
	// inline asm
	fma.rn.f64 	%fd143, %fd148, %fd145, %fd139;
	// inline asm
	mov.f64 	%fd149, 0d397B839A252049C0;
	// inline asm
	fma.rn.f64 	%fd489, %fd148, %fd149, %fd143;
	// inline asm
	bra.uni 	BB0_27;

BB0_20:
	mov.u64 	%rd134, %rd5;
	mov.u64 	%rd135, %rd28;

BB0_22:
	neg.s32 	%r83, %r8;
	setp.eq.s64	%p25, %rd5, 0;
	selp.b32	%r132, %r8, %r83, %p25;
	mov.u32 	%r130, 0;
	setp.lt.s64	%p26, %rd138, 1;
	@%p26 bra 	BB0_24;

BB0_23:
	shr.u64 	%rd89, %rd135, 63;
	shl.b64 	%rd90, %rd138, 1;
	or.b64  	%rd138, %rd89, %rd90;
	shl.b64 	%rd135, %rd135, 1;
	add.s32 	%r130, %r130, -1;
	setp.gt.s64	%p27, %rd138, 0;
	@%p27 bra 	BB0_23;

BB0_24:
	mul.lo.s64 	%rd140, %rd138, -3958705157555305931;
	mov.u64 	%rd91, -3958705157555305931;
	mul.hi.u64 	%rd139, %rd138, %rd91;
	setp.lt.s64	%p28, %rd139, 1;
	@%p28 bra 	BB0_26;

	shl.b64 	%rd92, %rd139, 1;
	shr.u64 	%rd93, %rd140, 63;
	or.b64  	%rd139, %rd92, %rd93;
	mul.lo.s64 	%rd140, %rd138, -7917410315110611862;
	add.s32 	%r130, %r130, -1;

BB0_26:
	setp.ne.s64	%p29, %rd140, 0;
	selp.u64	%rd94, 1, 0, %p29;
	add.s64 	%rd95, %rd94, %rd139;
	add.s32 	%r84, %r130, 1022;
	cvt.u64.u32	%rd96, %r84;
	shl.b64 	%rd97, %rd96, 52;
	shr.u64 	%rd98, %rd95, 11;
	add.s64 	%rd99, %rd97, %rd98;
	bfe.u64 	%rd100, %rd95, 10, 1;
	add.s64 	%rd101, %rd99, %rd100;
	or.b64  	%rd102, %rd101, %rd134;
	mov.b64 	 %fd489, %rd102;

BB0_27:
	add.s32 	%r16, %r132, 1;
	and.b32  	%r85, %r16, 1;
	setp.eq.b32	%p30, %r85, 1;
	mul.rn.f64 	%fd18, %fd489, %fd489;
	@!%p30 bra 	BB0_29;
	bra.uni 	BB0_28;

BB0_28:
	mov.f64 	%fd154, 0dBDA8FF8D5A8F03DB;
	mov.f64 	%fd156, 0d3E21EEA7D67FAD92;
	// inline asm
	fma.rn.f64 	%fd153, %fd154, %fd18, %fd156;
	// inline asm
	mov.f64 	%fd160, 0dBE927E4F8E26B8E3;
	// inline asm
	fma.rn.f64 	%fd157, %fd153, %fd18, %fd160;
	// inline asm
	mov.f64 	%fd164, 0d3EFA01A019DDEC33;
	// inline asm
	fma.rn.f64 	%fd161, %fd157, %fd18, %fd164;
	// inline asm
	mov.f64 	%fd168, 0dBF56C16C16C15D69;
	// inline asm
	fma.rn.f64 	%fd165, %fd161, %fd18, %fd168;
	// inline asm
	mov.f64 	%fd172, 0d3FA5555555555551;
	// inline asm
	fma.rn.f64 	%fd169, %fd165, %fd18, %fd172;
	// inline asm
	mov.f64 	%fd176, 0dBFE0000000000000;
	// inline asm
	fma.rn.f64 	%fd173, %fd169, %fd18, %fd176;
	// inline asm
	mov.f64 	%fd180, 0d3FF0000000000000;
	// inline asm
	fma.rn.f64 	%fd490, %fd173, %fd18, %fd180;
	// inline asm
	bra.uni 	BB0_30;

BB0_29:
	mov.f64 	%fd182, 0d3DE5D8FD1FCF0EC1;
	mov.f64 	%fd184, 0dBE5AE5E5A9291691;
	// inline asm
	fma.rn.f64 	%fd181, %fd182, %fd18, %fd184;
	// inline asm
	mov.f64 	%fd188, 0d3EC71DE3567D4896;
	// inline asm
	fma.rn.f64 	%fd185, %fd181, %fd18, %fd188;
	// inline asm
	mov.f64 	%fd192, 0dBF2A01A019BFDF03;
	// inline asm
	fma.rn.f64 	%fd189, %fd185, %fd18, %fd192;
	// inline asm
	mov.f64 	%fd196, 0d3F8111111110F7D0;
	// inline asm
	fma.rn.f64 	%fd193, %fd189, %fd18, %fd196;
	// inline asm
	mov.f64 	%fd200, 0dBFC5555555555548;
	// inline asm
	fma.rn.f64 	%fd197, %fd193, %fd18, %fd200;
	// inline asm
	mul.rn.f64 	%fd202, %fd197, %fd18;
	// inline asm
	fma.rn.f64 	%fd490, %fd202, %fd489, %fd489;
	// inline asm

BB0_30:
	and.b32  	%r86, %r16, 2;
	setp.eq.s32	%p31, %r86, 0;
	neg.f64 	%fd205, %fd490;
	selp.f64	%fd206, %fd490, %fd205, %p31;
	add.f64 	%fd491, %fd206, 0d0000000000000000;

BB0_31:
	add.s64 	%rd46, %rd48, %rd52;
	mov.f64 	%fd493, 0d7FFFFFFFE0000000;
	mov.f64 	%fd492, %fd493;
	@%p1 bra 	BB0_33;

	ld.global.f64 	%fd208, [%rd46];
	mul.f64 	%fd492, %fd208, 0d3FD45F306DC9C883;

BB0_33:
	@%p1 bra 	BB0_35;

	ld.global.f64 	%fd493, [%rd46];

BB0_35:
	abs.f64 	%fd210, %fd493;
	setp.gtu.f64	%p35, %fd210, 0d7FF0000000000000;
	or.pred  	%p36, %p35, %p4;
	selp.f64	%fd497, 0d0000000000000000, %fd492, %p36;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r88, %temp}, %fd497;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd497;
	}
	add.s32 	%r89, %r17, 1048576;
	mov.b64 	%fd211, {%r88, %r89};
	cvt.rni.f64.f64	%fd212, %fd211;
	cvt.rzi.s64.f64	%rd104, %fd212;
	cvt.u32.u64	%r18, %rd104;
	neg.f64 	%fd213, %fd212;
	mov.f64 	%fd214, 0d3FE0000000000000;
	fma.rn.f64 	%fd215, %fd213, %fd214, %fd497;
	mul.f64 	%fd216, %fd215, 0d3CA1A62633145C07;
	mov.f64 	%fd217, 0d400921FB54442D18;
	fma.rn.f64 	%fd218, %fd215, %fd217, %fd216;
	and.b64  	%rd105, %rd104, 1;
	mul.rn.f64 	%fd29, %fd218, %fd218;
	setp.eq.b64	%p37, %rd105, 1;
	not.pred 	%p38, %p37;
	selp.f64	%fd219, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p38;
	shl.b64 	%rd106, %rd105, 6;
	mov.u64 	%rd107, __cudart_sin_cos_coeffs;
	add.s64 	%rd108, %rd106, %rd107;
	ld.const.f64 	%fd220, [%rd108+8];
	fma.rn.f64 	%fd221, %fd219, %fd29, %fd220;
	ld.const.f64 	%fd222, [%rd108+16];
	fma.rn.f64 	%fd223, %fd221, %fd29, %fd222;
	ld.const.f64 	%fd224, [%rd108+24];
	fma.rn.f64 	%fd225, %fd223, %fd29, %fd224;
	ld.const.f64 	%fd226, [%rd108+32];
	fma.rn.f64 	%fd227, %fd225, %fd29, %fd226;
	ld.const.f64 	%fd228, [%rd108+40];
	fma.rn.f64 	%fd229, %fd227, %fd29, %fd228;
	ld.const.f64 	%fd230, [%rd108+48];
	fma.rn.f64 	%fd30, %fd229, %fd29, %fd230;
	fma.rn.f64 	%fd496, %fd30, %fd218, %fd218;
	@%p38 bra 	BB0_37;

	mov.f64 	%fd231, 0d3FF0000000000000;
	fma.rn.f64 	%fd496, %fd30, %fd29, %fd231;

BB0_37:
	and.b32  	%r90, %r18, 2;
	setp.eq.s32	%p39, %r90, 0;
	@%p39 bra 	BB0_39;

	mov.f64 	%fd232, 0d0000000000000000;
	mov.f64 	%fd233, 0dBFF0000000000000;
	fma.rn.f64 	%fd496, %fd496, %fd233, %fd232;

BB0_39:
	cvt.rzi.f64.f64	%fd234, %fd497;
	setp.neu.f64	%p40, %fd234, %fd497;
	@%p40 bra 	BB0_41;

	mov.f64 	%fd235, 0d0000000000000000;
	mul.rn.f64 	%fd496, %fd497, %fd235;

BB0_41:
	add.s32 	%r91, %r17, %r17;
	setp.lt.u32	%p41, %r91, -2038431743;
	@%p41 bra 	BB0_43;

	mov.f64 	%fd236, 0d0000000000000000;
	mul.rn.f64 	%fd497, %fd497, %fd236;

BB0_43:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r92}, %fd497;
	}
	add.s32 	%r93, %r92, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r94, %temp}, %fd497;
	}
	mov.b64 	%fd237, {%r94, %r93};
	cvt.rni.f64.f64	%fd238, %fd237;
	cvt.rzi.s64.f64	%rd109, %fd238;
	cvt.u32.u64	%r95, %rd109;
	neg.f64 	%fd239, %fd238;
	fma.rn.f64 	%fd241, %fd239, %fd214, %fd497;
	mul.f64 	%fd242, %fd241, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd244, %fd241, %fd217, %fd242;
	add.s32 	%r19, %r95, 1;
	and.b32  	%r96, %r19, 1;
	shl.b32 	%r97, %r96, 3;
	mul.rn.f64 	%fd40, %fd244, %fd244;
	setp.eq.s32	%p42, %r96, 0;
	selp.f64	%fd245, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p42;
	mul.wide.u32 	%rd110, %r97, 8;
	add.s64 	%rd112, %rd110, %rd107;
	ld.const.f64 	%fd246, [%rd112+8];
	fma.rn.f64 	%fd247, %fd245, %fd40, %fd246;
	ld.const.f64 	%fd248, [%rd112+16];
	fma.rn.f64 	%fd249, %fd247, %fd40, %fd248;
	ld.const.f64 	%fd250, [%rd112+24];
	fma.rn.f64 	%fd251, %fd249, %fd40, %fd250;
	ld.const.f64 	%fd252, [%rd112+32];
	fma.rn.f64 	%fd253, %fd251, %fd40, %fd252;
	ld.const.f64 	%fd254, [%rd112+40];
	fma.rn.f64 	%fd255, %fd253, %fd40, %fd254;
	ld.const.f64 	%fd256, [%rd112+48];
	fma.rn.f64 	%fd41, %fd255, %fd40, %fd256;
	fma.rn.f64 	%fd46, %fd41, %fd244, %fd244;
	@%p42 bra 	BB0_45;

	mov.f64 	%fd257, 0d3FF0000000000000;
	fma.rn.f64 	%fd46, %fd41, %fd40, %fd257;

BB0_45:
	and.b32  	%r98, %r19, 2;
	setp.eq.s32	%p43, %r98, 0;
	@%p43 bra 	BB0_47;

	mov.f64 	%fd258, 0d0000000000000000;
	mov.f64 	%fd259, 0dBFF0000000000000;
	fma.rn.f64 	%fd46, %fd46, %fd259, %fd258;

BB0_47:
	setp.eq.f64	%p44, %fd46, 0d3FF0000000000000;
	mov.f64 	%fd504, 0d3FF0000000000000;
	@%p44 bra 	BB0_78;

	abs.f64 	%fd47, %fd46;
	setp.gtu.f64	%p45, %fd47, 0d7FF0000000000000;
	@%p45 bra 	BB0_77;
	bra.uni 	BB0_49;

BB0_77:
	add.f64 	%fd504, %fd46, 0dBFF0000000000000;
	bra.uni 	BB0_78;

BB0_49:
	setp.eq.f64	%p46, %fd46, 0d7FF0000000000000;
	mov.f64 	%fd261, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd261;
	}
	@%p46 bra 	BB0_76;
	bra.uni 	BB0_50;

BB0_76:
	setp.gt.s32	%p68, %r20, -1;
	selp.f64	%fd504, 0d7FF0000000000000, 0d0000000000000000, %p68;
	bra.uni 	BB0_78;

BB0_50:
	and.b32  	%r99, %r20, 2147483647;
	setp.ne.s32	%p47, %r99, 2146435072;
	@%p47 bra 	BB0_52;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %fd261;
	}
	setp.eq.s32	%p48, %r100, 0;
	@%p48 bra 	BB0_74;

BB0_52:
	mul.rn.f64 	%fd265, %fd214, %fd261;
	cvt.rzi.f64.f64	%fd266, %fd265;
	mov.f64 	%fd267, 0d4000000000000000;
	mul.rn.f64 	%fd268, %fd267, %fd266;
	sub.f64 	%fd269, %fd261, %fd268;
	abs.f64 	%fd48, %fd269;
	setp.eq.f64	%p49, %fd46, 0d0000000000000000;
	@%p49 bra 	BB0_73;
	bra.uni 	BB0_53;

BB0_73:
	setp.eq.f64	%p65, %fd48, 0d3FF0000000000000;
	rcp.rn.f64 	%fd449, %fd46;
	mov.f64 	%fd450, 0d0000000000000000;
	rcp.rn.f64 	%fd451, %fd450;
	selp.f64	%fd504, %fd449, %fd451, %p65;
	bra.uni 	BB0_78;

BB0_53:
	setp.eq.f64	%p50, %fd46, 0dFFF0000000000000;
	@%p50 bra 	BB0_71;
	bra.uni 	BB0_54;

BB0_71:
	div.rn.f64 	%fd504, %fd261, %fd46;
	setp.neu.f64	%p64, %fd48, 0d3FF0000000000000;
	@%p64 bra 	BB0_78;

	mov.b64 	 %rd115, %fd504;
	xor.b64  	%rd116, %rd115, -9223372036854775808;
	mov.b64 	 %fd504, %rd116;
	bra.uni 	BB0_78;

BB0_74:
	setp.eq.f64	%p66, %fd46, 0dBFF0000000000000;
	@%p66 bra 	BB0_78;

	setp.gt.f64	%p67, %fd47, 0d3FF0000000000000;
	mov.f64 	%fd453, 0d0000000000000000;
	rcp.rn.f64 	%fd454, %fd453;
	selp.f64	%fd504, 0d0000000000000000, %fd454, %p67;
	bra.uni 	BB0_78;

BB0_54:
	setp.geu.f64	%p51, %fd46, 0d0000000000000000;
	@%p51 bra 	BB0_56;

	cvt.rzi.f64.f64	%fd272, %fd261;
	setp.neu.f64	%p52, %fd272, 0dBFF0000000000000;
	mov.f64 	%fd504, 0dFFF8000000000000;
	@%p52 bra 	BB0_78;

BB0_56:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r134}, %fd47; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r133, hi}, %fd47; 
	}
	// inline asm
	bfe.u32 	%r135, %r134, 20, 11;
	setp.ne.s32	%p53, %r135, 0;
	@%p53 bra 	BB0_58;

	mov.f64 	%fd277, 0d4350000000000000;
	mul.rn.f64 	%fd276, %fd47, %fd277;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r134}, %fd276; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r133, hi}, %fd276; 
	}
	// inline asm
	bfe.u32 	%r105, %r134, 20, 11;
	add.s32 	%r135, %r105, -54;

BB0_58:
	add.s32 	%r136, %r135, -1023;
	and.b32  	%r108, %r134, -2146435073;
	or.b32  	%r107, %r108, 1072693248;
	// inline asm
	mov.b64 	%fd500, {%r133, %r107};
	// inline asm
	setp.lt.u32	%p54, %r107, 1073127583;
	@%p54 bra 	BB0_60;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r109, hi}, %fd500; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r110}, %fd500; 
	}
	// inline asm
	add.s32 	%r112, %r110, -1048576;
	// inline asm
	mov.b64 	%fd500, {%r109, %r112};
	// inline asm
	add.s32 	%r136, %r135, -1022;

BB0_60:
	add.f64 	%fd366, %fd500, 0d3FF0000000000000;
	rcp.rn.f64 	%fd367, %fd366;
	add.f64 	%fd308, %fd500, 0dBFF0000000000000;
	mul.rn.f64 	%fd368, %fd308, %fd367;
	add.f64 	%fd356, %fd368, %fd368;
	mul.rn.f64 	%fd304, %fd356, %fd356;
	mov.f64 	%fd283, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd285, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd282, %fd283, %fd304, %fd285;
	// inline asm
	mov.f64 	%fd289, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd286, %fd282, %fd304, %fd289;
	// inline asm
	mov.f64 	%fd293, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd290, %fd286, %fd304, %fd293;
	// inline asm
	mov.f64 	%fd297, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd294, %fd290, %fd304, %fd297;
	// inline asm
	mov.f64 	%fd301, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd298, %fd294, %fd304, %fd301;
	// inline asm
	mov.f64 	%fd305, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd302, %fd298, %fd304, %fd305;
	// inline asm
	mul.rn.f64 	%fd369, %fd302, %fd304;
	sub.f64 	%fd370, %fd308, %fd356;
	mul.rn.f64 	%fd309, %fd267, %fd370;
	neg.f64 	%fd307, %fd356;
	// inline asm
	fma.rn.f64 	%fd306, %fd307, %fd308, %fd309;
	// inline asm
	mul.rn.f64 	%fd352, %fd367, %fd306;
	add.f64 	%fd372, %fd369, 0d3FB5555555555555;
	mov.f64 	%fd373, 0d3FB5555555555555;
	sub.f64 	%fd374, %fd373, %fd372;
	add.f64 	%fd375, %fd369, %fd374;
	add.f64 	%fd376, %fd375, 0d0000000000000000;
	add.f64 	%fd377, %fd376, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd319, %fd372, %fd377;
	sub.f64 	%fd378, %fd372, %fd319;
	add.f64 	%fd323, %fd377, %fd378;
	mul.rn.f64 	%fd379, %fd319, %fd356;
	neg.f64 	%fd313, %fd379;
	// inline asm
	fma.rn.f64 	%fd310, %fd319, %fd356, %fd313;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd314, %fd323, %fd352, %fd310;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd318, %fd319, %fd352, %fd314;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd322, %fd323, %fd356, %fd318;
	// inline asm
	add.f64 	%fd335, %fd379, %fd322;
	sub.f64 	%fd380, %fd379, %fd335;
	add.f64 	%fd339, %fd322, %fd380;
	mul.rn.f64 	%fd381, %fd335, %fd356;
	neg.f64 	%fd329, %fd381;
	// inline asm
	fma.rn.f64 	%fd326, %fd335, %fd356, %fd329;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd330, %fd339, %fd352, %fd326;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd334, %fd335, %fd352, %fd330;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd338, %fd339, %fd356, %fd334;
	// inline asm
	add.f64 	%fd351, %fd381, %fd338;
	sub.f64 	%fd382, %fd381, %fd351;
	add.f64 	%fd355, %fd338, %fd382;
	mul.rn.f64 	%fd383, %fd351, %fd356;
	neg.f64 	%fd345, %fd383;
	// inline asm
	fma.rn.f64 	%fd342, %fd351, %fd356, %fd345;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd346, %fd355, %fd352, %fd342;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd350, %fd351, %fd352, %fd346;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd354, %fd355, %fd356, %fd350;
	// inline asm
	add.f64 	%fd384, %fd383, %fd354;
	sub.f64 	%fd385, %fd383, %fd384;
	add.f64 	%fd386, %fd354, %fd385;
	add.f64 	%fd387, %fd356, %fd384;
	sub.f64 	%fd388, %fd356, %fd387;
	add.f64 	%fd389, %fd384, %fd388;
	add.f64 	%fd390, %fd386, %fd389;
	add.f64 	%fd391, %fd352, %fd390;
	add.f64 	%fd392, %fd387, %fd391;
	sub.f64 	%fd393, %fd387, %fd392;
	add.f64 	%fd394, %fd391, %fd393;
	cvt.rn.f64.s32	%fd395, %r136;
	mov.f64 	%fd396, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd397, %fd395, %fd396;
	mov.f64 	%fd398, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd399, %fd395, %fd398;
	add.f64 	%fd400, %fd397, %fd392;
	sub.f64 	%fd401, %fd397, %fd400;
	add.f64 	%fd402, %fd392, %fd401;
	add.f64 	%fd403, %fd394, %fd402;
	add.f64 	%fd404, %fd399, %fd403;
	add.f64 	%fd359, %fd400, %fd404;
	sub.f64 	%fd405, %fd400, %fd359;
	add.f64 	%fd363, %fd404, %fd405;
	mul.rn.f64 	%fd406, %fd359, %fd261;
	neg.f64 	%fd361, %fd406;
	// inline asm
	fma.rn.f64 	%fd358, %fd359, %fd261, %fd361;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd362, %fd363, %fd261, %fd358;
	// inline asm
	add.f64 	%fd52, %fd406, %fd362;
	sub.f64 	%fd407, %fd406, %fd52;
	add.f64 	%fd53, %fd362, %fd407;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd52;
	}
	mov.b32 	 %f1, %r33;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p55, %f2, 0f40874911;
	@%p55 bra 	BB0_62;
	bra.uni 	BB0_61;

BB0_62:
	mov.f64 	%fd411, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd412, %fd52, %fd411;
	mov.f64 	%fd413, 0d4338000000000000;
	add.rn.f64 	%fd414, %fd412, %fd413;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r34, %temp}, %fd414;
	}
	mov.f64 	%fd415, 0dC338000000000000;
	add.rn.f64 	%fd416, %fd414, %fd415;
	mov.f64 	%fd417, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd418, %fd416, %fd417, %fd52;
	mov.f64 	%fd419, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd420, %fd416, %fd419, %fd418;
	mov.f64 	%fd421, 0d3E928AF3FCA213EA;
	mov.f64 	%fd422, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd423, %fd422, %fd420, %fd421;
	mov.f64 	%fd424, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd425, %fd423, %fd420, %fd424;
	mov.f64 	%fd426, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd427, %fd425, %fd420, %fd426;
	mov.f64 	%fd428, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd429, %fd427, %fd420, %fd428;
	mov.f64 	%fd430, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd431, %fd429, %fd420, %fd430;
	mov.f64 	%fd432, 0d3F81111111122322;
	fma.rn.f64 	%fd433, %fd431, %fd420, %fd432;
	mov.f64 	%fd434, 0d3FA55555555502A1;
	fma.rn.f64 	%fd435, %fd433, %fd420, %fd434;
	mov.f64 	%fd436, 0d3FC5555555555511;
	fma.rn.f64 	%fd437, %fd435, %fd420, %fd436;
	mov.f64 	%fd438, 0d3FE000000000000B;
	fma.rn.f64 	%fd439, %fd437, %fd420, %fd438;
	mov.f64 	%fd440, 0d3FF0000000000000;
	fma.rn.f64 	%fd441, %fd439, %fd420, %fd440;
	fma.rn.f64 	%fd501, %fd441, %fd420, %fd440;
	abs.s32 	%r113, %r34;
	setp.lt.s32	%p58, %r113, 1023;
	@%p58 bra 	BB0_64;
	bra.uni 	BB0_63;

BB0_64:
	shl.b32 	%r119, %r34, 20;
	add.s32 	%r137, %r119, 1072693248;
	bra.uni 	BB0_65;

BB0_61:
	setp.lt.s32	%p56, %r33, 0;
	selp.f64	%fd408, 0d0000000000000000, 0d7FF0000000000000, %p56;
	abs.f64 	%fd409, %fd52;
	setp.gtu.f64	%p57, %fd409, 0d7FF0000000000000;
	add.f64 	%fd410, %fd52, %fd52;
	selp.f64	%fd504, %fd410, %fd408, %p57;
	bra.uni 	BB0_66;

BB0_63:
	add.s32 	%r114, %r34, 2046;
	shl.b32 	%r115, %r114, 19;
	and.b32  	%r116, %r115, -1048576;
	shl.b32 	%r117, %r114, 20;
	sub.s32 	%r137, %r117, %r116;
	mov.u32 	%r118, 0;
	mov.b64 	%fd442, {%r118, %r116};
	mul.f64 	%fd501, %fd501, %fd442;

BB0_65:
	mov.u32 	%r120, 0;
	mov.b64 	%fd443, {%r120, %r137};
	mul.f64 	%fd504, %fd501, %fd443;

BB0_66:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %fd504;
	}
	and.b32  	%r122, %r121, 2147483647;
	setp.ne.s32	%p59, %r122, 2146435072;
	@%p59 bra 	BB0_68;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r123, %temp}, %fd504;
	}
	setp.eq.s32	%p60, %r123, 0;
	@%p60 bra 	BB0_69;

BB0_68:
	// inline asm
	fma.rn.f64 	%fd504, %fd504, %fd53, %fd504;
	// inline asm

BB0_69:
	setp.neu.f64	%p61, %fd48, 0d3FF0000000000000;
	or.pred  	%p63, %p51, %p61;
	@%p63 bra 	BB0_78;

	mov.b64 	 %rd113, %fd504;
	xor.b64  	%rd114, %rd113, -9223372036854775808;
	mov.b64 	 %fd504, %rd114;

BB0_78:
	mov.u64 	%rd124, __cudart_sin_cos_coeffs;
	mov.f64 	%fd483, 0d400921FB54442D18;
	mov.f64 	%fd482, 0d3FE0000000000000;
	fma.rn.f64 	%fd455, %fd496, %fd504, %fd491;
	mul.f64 	%fd70, %fd455, 0d3FD45F306DC9C883;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r124, %temp}, %fd70;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r125}, %fd70;
	}
	add.s32 	%r126, %r125, 1048576;
	mov.b64 	%fd456, {%r124, %r126};
	cvt.rni.f64.f64	%fd457, %fd456;
	cvt.rzi.s64.f64	%rd117, %fd457;
	cvt.u32.u64	%r38, %rd117;
	neg.f64 	%fd458, %fd457;
	fma.rn.f64 	%fd460, %fd458, %fd482, %fd70;
	mul.f64 	%fd461, %fd460, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd463, %fd460, %fd483, %fd461;
	and.b64  	%rd118, %rd117, 1;
	mul.rn.f64 	%fd71, %fd463, %fd463;
	setp.eq.b64	%p69, %rd118, 1;
	not.pred 	%p70, %p69;
	selp.f64	%fd464, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p70;
	shl.b64 	%rd119, %rd118, 6;
	add.s64 	%rd121, %rd119, %rd124;
	ld.const.f64 	%fd465, [%rd121+8];
	fma.rn.f64 	%fd466, %fd464, %fd71, %fd465;
	ld.const.f64 	%fd467, [%rd121+16];
	fma.rn.f64 	%fd468, %fd466, %fd71, %fd467;
	ld.const.f64 	%fd469, [%rd121+24];
	fma.rn.f64 	%fd470, %fd468, %fd71, %fd469;
	ld.const.f64 	%fd471, [%rd121+32];
	fma.rn.f64 	%fd472, %fd470, %fd71, %fd471;
	ld.const.f64 	%fd473, [%rd121+40];
	fma.rn.f64 	%fd474, %fd472, %fd71, %fd473;
	ld.const.f64 	%fd475, [%rd121+48];
	fma.rn.f64 	%fd72, %fd474, %fd71, %fd475;
	fma.rn.f64 	%fd507, %fd72, %fd463, %fd463;
	@%p70 bra 	BB0_80;

	mov.f64 	%fd476, 0d3FF0000000000000;
	fma.rn.f64 	%fd507, %fd72, %fd71, %fd476;

BB0_80:
	and.b32  	%r127, %r38, 2;
	setp.eq.s32	%p71, %r127, 0;
	@%p71 bra 	BB0_82;

	mov.f64 	%fd477, 0d0000000000000000;
	mov.f64 	%fd478, 0dBFF0000000000000;
	fma.rn.f64 	%fd507, %fd507, %fd478, %fd477;

BB0_82:
	cvt.rzi.f64.f64	%fd479, %fd70;
	setp.neu.f64	%p72, %fd479, %fd70;
	@%p72 bra 	BB0_84;

	mov.f64 	%fd480, 0d0000000000000000;
	mul.rn.f64 	%fd507, %fd70, %fd480;

BB0_84:
	ld.param.u64 	%rd125, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0];
	add.s64 	%rd123, %rd125, %rd52;
	sub.f64 	%fd481, %fd507, %fd9;
	st.global.f64 	[%rd123], %fd481;
	ret;
}


  