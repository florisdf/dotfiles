//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23305415
// Driver 384.111
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power

.entry DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_3,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_4,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_5,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_6,
	.param .f64 DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_7
)
{
	.reg .pred 	%p<54>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<61>;
	.reg .f64 	%fd<298>;
	.reg .b64 	%rd<34>;


	ld.param.u64 	%rd13, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_6];
	mov.b32	%r20, %envreg3;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %ntid.x;
	mad.lo.s32 	%r23, %r21, %r22, %r20;
	mov.u32 	%r24, %tid.x;
	add.s32 	%r1, %r23, %r24;
	mov.f64 	%fd278, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p2, %r1, 4;
	@%p2 bra 	BB0_2;

	mul.wide.s32 	%rd14, %r1, 8;
	add.s64 	%rd15, %rd13, %rd14;
	ld.global.f64 	%fd278, [%rd15];

BB0_2:
	abs.f64 	%fd60, %fd278;
	setp.gtu.f64	%p3, %fd60, 0d7FF0000000000000;
	or.pred  	%p5, %p3, %p2;
	selp.f64	%fd3, 0d0000000000000000, %fd278, %p5;
	setp.eq.f64	%p6, %fd3, 0d3FF0000000000000;
	mov.f64 	%fd283, 0d3FF0000000000000;
	@%p6 bra 	BB0_33;

	abs.f64 	%fd4, %fd3;
	setp.gtu.f64	%p7, %fd4, 0d7FF0000000000000;
	@%p7 bra 	BB0_32;
	bra.uni 	BB0_4;

BB0_32:
	add.f64 	%fd283, %fd3, 0d3FFCAC083126E979;
	bra.uni 	BB0_33;

BB0_4:
	setp.eq.f64	%p8, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd61, 0d3FFCAC083126E979;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd61;
	}
	@%p8 bra 	BB0_31;
	bra.uni 	BB0_5;

BB0_31:
	setp.gt.s32	%p30, %r2, -1;
	selp.f64	%fd283, 0d7FF0000000000000, 0d0000000000000000, %p30;
	bra.uni 	BB0_33;

BB0_5:
	and.b32  	%r25, %r2, 2147483647;
	setp.ne.s32	%p9, %r25, 2146435072;
	@%p9 bra 	BB0_7;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %fd61;
	}
	setp.eq.s32	%p10, %r26, 0;
	@%p10 bra 	BB0_29;

BB0_7:
	mov.f64 	%fd64, 0d3FE0000000000000;
	mul.rn.f64 	%fd65, %fd64, %fd61;
	cvt.rzi.f64.f64	%fd66, %fd65;
	mov.f64 	%fd67, 0d4000000000000000;
	mul.rn.f64 	%fd68, %fd67, %fd66;
	sub.f64 	%fd69, %fd61, %fd68;
	abs.f64 	%fd5, %fd69;
	setp.eq.f64	%p11, %fd3, 0d0000000000000000;
	@%p11 bra 	BB0_28;
	bra.uni 	BB0_8;

BB0_28:
	setp.eq.f64	%p27, %fd5, 0d3FF0000000000000;
	selp.f64	%fd283, %fd3, 0d0000000000000000, %p27;
	bra.uni 	BB0_33;

BB0_8:
	setp.eq.f64	%p12, %fd3, 0dFFF0000000000000;
	@%p12 bra 	BB0_26;
	bra.uni 	BB0_9;

BB0_26:
	neg.f64 	%fd283, %fd3;
	setp.neu.f64	%p26, %fd5, 0d3FF0000000000000;
	@%p26 bra 	BB0_33;

	mov.b64 	 %rd18, %fd283;
	xor.b64  	%rd19, %rd18, -9223372036854775808;
	mov.b64 	 %fd283, %rd19;
	bra.uni 	BB0_33;

BB0_29:
	setp.eq.f64	%p28, %fd3, 0dBFF0000000000000;
	@%p28 bra 	BB0_33;

	setp.gt.f64	%p29, %fd4, 0d3FF0000000000000;
	selp.f64	%fd283, 0d7FF0000000000000, 0d0000000000000000, %p29;
	bra.uni 	BB0_33;

BB0_9:
	setp.geu.f64	%p13, %fd3, 0d0000000000000000;
	@%p13 bra 	BB0_11;

	cvt.rzi.f64.f64	%fd72, %fd61;
	setp.neu.f64	%p14, %fd72, 0d3FFCAC083126E979;
	mov.f64 	%fd283, 0dFFF8000000000000;
	@%p14 bra 	BB0_33;

BB0_11:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r57}, %fd4; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r56, hi}, %fd4; 
	}
	// inline asm
	bfe.u32 	%r58, %r57, 20, 11;
	setp.ne.s32	%p15, %r58, 0;
	@%p15 bra 	BB0_13;

	mov.f64 	%fd77, 0d4350000000000000;
	mul.rn.f64 	%fd76, %fd4, %fd77;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r57}, %fd76; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r56, hi}, %fd76; 
	}
	// inline asm
	bfe.u32 	%r31, %r57, 20, 11;
	add.s32 	%r58, %r31, -54;

BB0_13:
	add.s32 	%r59, %r58, -1023;
	and.b32  	%r34, %r57, -2146435073;
	or.b32  	%r33, %r34, 1072693248;
	// inline asm
	mov.b64 	%fd279, {%r56, %r33};
	// inline asm
	setp.lt.u32	%p16, %r33, 1073127583;
	@%p16 bra 	BB0_15;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r35, hi}, %fd279; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r36}, %fd279; 
	}
	// inline asm
	add.s32 	%r38, %r36, -1048576;
	// inline asm
	mov.b64 	%fd279, {%r35, %r38};
	// inline asm
	add.s32 	%r59, %r58, -1022;

BB0_15:
	add.f64 	%fd166, %fd279, 0d3FF0000000000000;
	rcp.rn.f64 	%fd167, %fd166;
	add.f64 	%fd108, %fd279, 0dBFF0000000000000;
	mul.rn.f64 	%fd168, %fd108, %fd167;
	add.f64 	%fd156, %fd168, %fd168;
	mul.rn.f64 	%fd104, %fd156, %fd156;
	mov.f64 	%fd83, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd85, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd82, %fd83, %fd104, %fd85;
	// inline asm
	mov.f64 	%fd89, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd86, %fd82, %fd104, %fd89;
	// inline asm
	mov.f64 	%fd93, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd90, %fd86, %fd104, %fd93;
	// inline asm
	mov.f64 	%fd97, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd94, %fd90, %fd104, %fd97;
	// inline asm
	mov.f64 	%fd101, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd98, %fd94, %fd104, %fd101;
	// inline asm
	mov.f64 	%fd105, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd102, %fd98, %fd104, %fd105;
	// inline asm
	mul.rn.f64 	%fd169, %fd102, %fd104;
	sub.f64 	%fd170, %fd108, %fd156;
	mul.rn.f64 	%fd109, %fd67, %fd170;
	neg.f64 	%fd107, %fd156;
	// inline asm
	fma.rn.f64 	%fd106, %fd107, %fd108, %fd109;
	// inline asm
	mul.rn.f64 	%fd152, %fd167, %fd106;
	add.f64 	%fd172, %fd169, 0d3FB5555555555555;
	mov.f64 	%fd173, 0d3FB5555555555555;
	sub.f64 	%fd174, %fd173, %fd172;
	add.f64 	%fd175, %fd169, %fd174;
	add.f64 	%fd176, %fd175, 0d0000000000000000;
	add.f64 	%fd177, %fd176, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd119, %fd172, %fd177;
	sub.f64 	%fd178, %fd172, %fd119;
	add.f64 	%fd123, %fd177, %fd178;
	mul.rn.f64 	%fd179, %fd119, %fd156;
	neg.f64 	%fd113, %fd179;
	// inline asm
	fma.rn.f64 	%fd110, %fd119, %fd156, %fd113;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd114, %fd123, %fd152, %fd110;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd118, %fd119, %fd152, %fd114;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd122, %fd123, %fd156, %fd118;
	// inline asm
	add.f64 	%fd135, %fd179, %fd122;
	sub.f64 	%fd180, %fd179, %fd135;
	add.f64 	%fd139, %fd122, %fd180;
	mul.rn.f64 	%fd181, %fd135, %fd156;
	neg.f64 	%fd129, %fd181;
	// inline asm
	fma.rn.f64 	%fd126, %fd135, %fd156, %fd129;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd130, %fd139, %fd152, %fd126;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd134, %fd135, %fd152, %fd130;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd138, %fd139, %fd156, %fd134;
	// inline asm
	add.f64 	%fd151, %fd181, %fd138;
	sub.f64 	%fd182, %fd181, %fd151;
	add.f64 	%fd155, %fd138, %fd182;
	mul.rn.f64 	%fd183, %fd151, %fd156;
	neg.f64 	%fd145, %fd183;
	// inline asm
	fma.rn.f64 	%fd142, %fd151, %fd156, %fd145;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd146, %fd155, %fd152, %fd142;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd150, %fd151, %fd152, %fd146;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd154, %fd155, %fd156, %fd150;
	// inline asm
	add.f64 	%fd184, %fd183, %fd154;
	sub.f64 	%fd185, %fd183, %fd184;
	add.f64 	%fd186, %fd154, %fd185;
	add.f64 	%fd187, %fd156, %fd184;
	sub.f64 	%fd188, %fd156, %fd187;
	add.f64 	%fd189, %fd184, %fd188;
	add.f64 	%fd190, %fd186, %fd189;
	add.f64 	%fd191, %fd152, %fd190;
	add.f64 	%fd192, %fd187, %fd191;
	sub.f64 	%fd193, %fd187, %fd192;
	add.f64 	%fd194, %fd191, %fd193;
	cvt.rn.f64.s32	%fd195, %r59;
	mov.f64 	%fd196, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd197, %fd195, %fd196;
	mov.f64 	%fd198, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd199, %fd195, %fd198;
	add.f64 	%fd200, %fd197, %fd192;
	sub.f64 	%fd201, %fd197, %fd200;
	add.f64 	%fd202, %fd192, %fd201;
	add.f64 	%fd203, %fd194, %fd202;
	add.f64 	%fd204, %fd199, %fd203;
	add.f64 	%fd159, %fd200, %fd204;
	sub.f64 	%fd205, %fd200, %fd159;
	add.f64 	%fd163, %fd204, %fd205;
	mul.rn.f64 	%fd206, %fd159, %fd61;
	neg.f64 	%fd161, %fd206;
	// inline asm
	fma.rn.f64 	%fd158, %fd159, %fd61, %fd161;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd162, %fd163, %fd61, %fd158;
	// inline asm
	add.f64 	%fd9, %fd206, %fd162;
	sub.f64 	%fd207, %fd206, %fd9;
	add.f64 	%fd10, %fd162, %fd207;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd9;
	}
	mov.b32 	 %f1, %r15;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p17, %f2, 0f40874911;
	@%p17 bra 	BB0_17;
	bra.uni 	BB0_16;

BB0_17:
	mov.f64 	%fd211, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd212, %fd9, %fd211;
	mov.f64 	%fd213, 0d4338000000000000;
	add.rn.f64 	%fd214, %fd212, %fd213;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd214;
	}
	mov.f64 	%fd215, 0dC338000000000000;
	add.rn.f64 	%fd216, %fd214, %fd215;
	mov.f64 	%fd217, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd218, %fd216, %fd217, %fd9;
	mov.f64 	%fd219, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd220, %fd216, %fd219, %fd218;
	mov.f64 	%fd221, 0d3E928AF3FCA213EA;
	mov.f64 	%fd222, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd223, %fd222, %fd220, %fd221;
	mov.f64 	%fd224, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd225, %fd223, %fd220, %fd224;
	mov.f64 	%fd226, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd227, %fd225, %fd220, %fd226;
	mov.f64 	%fd228, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd229, %fd227, %fd220, %fd228;
	mov.f64 	%fd230, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd231, %fd229, %fd220, %fd230;
	mov.f64 	%fd232, 0d3F81111111122322;
	fma.rn.f64 	%fd233, %fd231, %fd220, %fd232;
	mov.f64 	%fd234, 0d3FA55555555502A1;
	fma.rn.f64 	%fd235, %fd233, %fd220, %fd234;
	mov.f64 	%fd236, 0d3FC5555555555511;
	fma.rn.f64 	%fd237, %fd235, %fd220, %fd236;
	mov.f64 	%fd238, 0d3FE000000000000B;
	fma.rn.f64 	%fd239, %fd237, %fd220, %fd238;
	mov.f64 	%fd240, 0d3FF0000000000000;
	fma.rn.f64 	%fd241, %fd239, %fd220, %fd240;
	fma.rn.f64 	%fd280, %fd241, %fd220, %fd240;
	abs.s32 	%r39, %r16;
	setp.lt.s32	%p20, %r39, 1023;
	@%p20 bra 	BB0_19;
	bra.uni 	BB0_18;

BB0_19:
	shl.b32 	%r45, %r16, 20;
	add.s32 	%r60, %r45, 1072693248;
	bra.uni 	BB0_20;

BB0_16:
	setp.lt.s32	%p18, %r15, 0;
	selp.f64	%fd208, 0d0000000000000000, 0d7FF0000000000000, %p18;
	abs.f64 	%fd209, %fd9;
	setp.gtu.f64	%p19, %fd209, 0d7FF0000000000000;
	add.f64 	%fd210, %fd9, %fd9;
	selp.f64	%fd283, %fd210, %fd208, %p19;
	bra.uni 	BB0_21;

BB0_18:
	add.s32 	%r40, %r16, 2046;
	shl.b32 	%r41, %r40, 19;
	and.b32  	%r42, %r41, -1048576;
	shl.b32 	%r43, %r40, 20;
	sub.s32 	%r60, %r43, %r42;
	mov.u32 	%r44, 0;
	mov.b64 	%fd242, {%r44, %r42};
	mul.f64 	%fd280, %fd280, %fd242;

BB0_20:
	mov.u32 	%r46, 0;
	mov.b64 	%fd243, {%r46, %r60};
	mul.f64 	%fd283, %fd280, %fd243;

BB0_21:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd283;
	}
	and.b32  	%r48, %r47, 2147483647;
	setp.ne.s32	%p21, %r48, 2146435072;
	@%p21 bra 	BB0_23;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd283;
	}
	setp.eq.s32	%p22, %r49, 0;
	@%p22 bra 	BB0_24;

BB0_23:
	// inline asm
	fma.rn.f64 	%fd283, %fd283, %fd10, %fd283;
	// inline asm

BB0_24:
	setp.neu.f64	%p23, %fd5, 0d3FF0000000000000;
	or.pred  	%p25, %p13, %p23;
	@%p25 bra 	BB0_33;

	mov.b64 	 %rd16, %fd283;
	xor.b64  	%rd17, %rd16, -9223372036854775808;
	mov.b64 	 %fd283, %rd17;

BB0_33:
	mov.b32	%r55, %envreg3;
	mov.u32 	%r54, %ntid.x;
	mov.u32 	%r53, %ctaid.x;
	mov.u32 	%r52, %tid.x;
	mad.lo.s32 	%r51, %r53, %r54, %r55;
	add.s32 	%r50, %r51, %r52;
	cvt.s64.s32	%rd33, %r50;
	ld.param.u64 	%rd27, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_5];
	shl.b64 	%rd20, %rd33, 3;
	add.s64 	%rd2, %rd27, %rd20;
	mov.f64 	%fd284, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_35;

	ld.global.f64 	%fd284, [%rd2];

BB0_35:
	abs.f64 	%fd251, %fd284;
	setp.gtu.f64	%p32, %fd251, 0d7FF0000000000000;
	mov.f64 	%fd293, 0d0000000000000000;
	@%p32 bra 	BB0_62;

	mov.f64 	%fd286, 0d7FFFFFFFE0000000;
	mov.f64 	%fd285, %fd286;
	@%p2 bra 	BB0_38;

	ld.global.f64 	%fd285, [%rd2];

BB0_38:
	ld.param.u64 	%rd28, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_4];
	add.s64 	%rd3, %rd28, %rd20;
	@%p2 bra 	BB0_40;

	ld.global.f64 	%fd286, [%rd3];

BB0_40:
	abs.f64 	%fd255, %fd286;
	setp.gtu.f64	%p35, %fd255, 0d7FF0000000000000;
	mov.f64 	%fd254, 0dFFF8000000000000;
	@%p35 bra 	BB0_41;
	bra.uni 	BB0_42;

BB0_41:
	mov.f64 	%fd292, %fd254;
	bra.uni 	BB0_61;

BB0_42:
	mov.f64 	%fd288, 0d7FFFFFFFE0000000;
	mov.f64 	%fd34, %fd288;
	@%p2 bra 	BB0_44;

	ld.global.f64 	%fd34, [%rd3];

BB0_44:
	ld.param.u64 	%rd29, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_3];
	add.s64 	%rd4, %rd29, %rd20;
	@%p2 bra 	BB0_46;

	ld.global.f64 	%fd288, [%rd4];

BB0_46:
	abs.f64 	%fd258, %fd288;
	setp.le.f64	%p38, %fd258, 0d7FF0000000000000;
	@%p38 bra 	BB0_52;

	mov.f64 	%fd289, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_49;

	ld.global.f64 	%fd289, [%rd3];

BB0_49:
	abs.f64 	%fd260, %fd289;
	setp.gtu.f64	%p40, %fd260, 0d7FF0000000000000;
	@%p40 bra 	BB0_52;

	mov.f64 	%fd292, 0d0000000000000000;
	@%p2 bra 	BB0_61;

	ld.global.f64 	%fd263, [%rd3];
	setp.neu.f64	%p42, %fd263, 0d0000000000000000;
	@%p42 bra 	BB0_61;

BB0_52:
	mov.f64 	%fd290, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_54;

	ld.global.f64 	%fd290, [%rd4];

BB0_54:
	abs.f64 	%fd265, %fd290;
	setp.gtu.f64	%p44, %fd265, 0d7FF0000000000000;
	@%p44 bra 	BB0_59;
	bra.uni 	BB0_55;

BB0_59:
	setp.eq.f64	%p47, %fd34, 0d0000000000000000;
	mov.f64 	%fd292, %fd254;
	@%p47 bra 	BB0_61;

	rcp.rn.f64 	%fd292, %fd34;
	bra.uni 	BB0_61;

BB0_55:
	setp.eq.f64	%p45, %fd34, 0d0000000000000000;
	mov.f64 	%fd292, %fd254;
	@%p45 bra 	BB0_61;

	mov.f64 	%fd291, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_58;

	ld.global.f64 	%fd291, [%rd4];

BB0_58:
	div.rn.f64 	%fd292, %fd291, %fd34;

BB0_61:
	mul.f64 	%fd293, %fd285, %fd292;

BB0_62:
	ld.param.u64 	%rd30, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_2];
	add.s64 	%rd5, %rd30, %rd20;
	mov.f64 	%fd294, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_64;

	ld.global.f64 	%fd294, [%rd5];

BB0_64:
	abs.f64 	%fd270, %fd294;
	setp.gtu.f64	%p49, %fd270, 0d7FF0000000000000;
	or.pred  	%p50, %p49, %p2;
	selp.f64	%fd295, 0d0000000000000000, 0d7FFFFFFFE0000000, %p49;
	@%p50 bra 	BB0_66;

	ld.global.f64 	%fd271, [%rd5];
	add.f64 	%fd295, %fd271, 0d0000000000000000;

BB0_66:
	ld.param.u64 	%rd31, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_1];
	add.s64 	%rd6, %rd31, %rd20;
	mov.f64 	%fd296, 0d7FFFFFFFE0000000;
	@%p2 bra 	BB0_68;

	ld.global.f64 	%fd296, [%rd6];

BB0_68:
	abs.f64 	%fd273, %fd296;
	setp.gtu.f64	%p52, %fd273, 0d7FF0000000000000;
	or.pred  	%p53, %p52, %p2;
	selp.f64	%fd297, 0d0000000000000000, 0d7FFFFFFFE0000000, %p52;
	@%p53 bra 	BB0_70;

	ld.global.f64 	%fd297, [%rd6];

BB0_70:
	ld.param.u64 	%rd32, [DynamicKernel_nop_fsum_fsub_fsum_fmul_fdiv_Power_param_0];
	add.f64 	%fd274, %fd283, 0d0000000000000000;
	add.f64 	%fd275, %fd295, %fd297;
	sub.f64 	%fd276, %fd275, %fd293;
	add.f64 	%fd277, %fd274, %fd276;
	add.s64 	%rd26, %rd32, %rd20;
	st.global.f64 	[%rd26], %fd277;
	ret;
}


  