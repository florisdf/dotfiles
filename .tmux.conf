# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

set-window-option -g mode-keys vi

set -sg escape-time 1 # quicker responses

set -g base-index 1 # Numbering of windows
setw -g pane-base-index 1 # Numbering of Panes

# vim-like pane resizing  
bind -r C-k resize-pane -U
bind -r C-j resize-pane -D
bind -r C-h resize-pane -L
bind -r C-l resize-pane -R

bind-key \ split-window -h -c '#{pane_current_path}' # Split panes horizontally
bind-key - split-window -v -c '#{pane_current_path}' # Split panes vertically

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi C-\ select-pane -l

# Make sure Powerline doesn't look like crap in vim
set -g default-terminal "screen-256color"

# Vim like copy-paste
bind P paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle

# Use tmux-powerline
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/git_clones/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/git_clones/tmux-powerline/powerline.sh right)"

bind C-[ run '~/git_clones/tmux-powerline/mute_powerline.sh left'		# Mute left statusbar.
bind C-] run '~/git_clones/tmux-powerline/mute_powerline.sh right'		# Mute right statusbar.

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'seebi/tmux-colors-solarized'
set -g @colors-solarized 'dark'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
